package main

import "fmt"

// В этом разделе описаны разные способы использования Go-каналов

func main() {
	// нулевым значением для каналов является nil, и если отправить
	// сообщение в закрытый канал, то программа перейдет в режим паники.
	// Но если вы попытаетесь прочитать данные из закрытого канала, то
	// получите нулевое значение для данного типа канала. Таким образом,
	// после закрытия канала вы больше не можете записывать в него
	// данные, но все равно можете читать его.

	c := make(chan int)
	c = nil
	close(c) // -> panic: close of nil channel
	fmt.Println(<-c)

	// Чтобы канал можно было закрыть, он не должен быть предназначен
	// только для приема данных. Кроме того, нулевой канал всегда
	// блокируется, то есть попытка чтения или записи с нулевого канала
	// заблокирует канал. Это свойство каналов очень полезно в тех
	// случаях, когда нужно ОТКЛЮЧИТЬ ВЕТВЬ оператора SELECT, — для
	// этого достаточно присвоить переменной канала значение nil.
}
