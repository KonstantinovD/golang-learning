package main

import (
	"fmt"
	"time"
)

// Замкнутые переменные (closured variables) в горутинах определяются
// в момент фактического выполнения горутины, когда выполняется оператор
// go, создающий новую горутину. Это означает, что замкнутые переменные
// заменяются их значениями в тот момент, когда планировщик Go решит
// выполнить соответствующий код.

func main() {
	for i := 0; i <= 20; i++ {
		go func() {
			fmt.Print(i, " ") // 9 21 21 21 21 21 21 ... -> abnormal
		}()
	}
	time.Sleep(time.Second)
	fmt.Println()

	// Корректный, но странный оператор i: = i создает новый экземпляр
	// переменной для горутины
	for i := 0; i <= 20; i++ {
		i := i
		go func() {
			fmt.Print(i, " ") // 1 5 4 3 6 0 13 7 8 9 10 ... -> normal
		}()
	}
	time.Sleep(time.Second)
	fmt.Println()
}
